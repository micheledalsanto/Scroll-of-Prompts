{
  "copy-knight": {
    "1": [
      {
        "question": "The scroll speaks, but not clearly. What should the first stroke of your quill ensure?",
        "options": ["A catchy tone", "A clear objective", "Fancy words", "An image-rich metaphor"],
        "correct": 1,
        "hint": "A prompt without a goal is like a sword without a hilt."
      },
      {
        "question": "The client whispers their desire. What must the copy-knight demand before writing a single rune?",
        "options": ["A keyword list", "A creative brief", "A logo design", "An ad budget"],
        "correct": 1,
        "hint": "Every great scroll begins with a clear request from the summoner."
      },
      {
        "question": "The forest of prompts is dense. Which compass points your words to clarity?",
        "options": ["Grammar rules", "Few-shot examples", "A title generator", "Passive voice"],
        "correct": 1,
        "hint": "Show the way by showing the how."
      },
      {
        "question": "A prompt without context is like a ship without sails. What must the wise scribe provide?",
        "options": ["Call to action", "Meta description", "Background info", "Formatting tips"],
        "correct": 2,
        "hint": "Even the strongest spell fails without knowing the battlefield."
      },
      {
        "question": "A sorcerer asks for persuasive magic. What must the prompt include?",
        "options": ["Conversion intent", "Image references", "Character names", "Random keywords"],
        "correct": 0,
        "hint": "Persuasion begins with intent, not decoration."
      },
      {
        "question": "A copy-knight is lost in jargon. What breaks the spell?",
        "options": ["SEO stuffing", "User-friendly tone", "Exclamation overuse", "Alliteration"],
        "correct": 1,
        "hint": "Speak as the villagers do, not as the court poet."
      }
    ],
    "2": [
      {
        "question": "The guildmaster demands variants! What should a prompt request for creative diversity?",
        "options": ["One perfect CTA", "Several tone options", "A fixed structure", "Synonyms only"],
        "correct": 1,
        "hint": "One voice may be right, but many voices echo further."
      },
      {
        "question": "In the Hall of Headlines, what ensures your prompt crafts powerful titles?",
        "options": ["Word count", "Headline formula", "Random adjectives", "Passive mood"],
        "correct": 1,
        "hint": "Even dragons follow scrolls that promise treasure."
      },
      {
        "question": "Your client desires urgency. What must you embed within your prompt?",
        "options": ["Emojis", "Scarcity and CTA", "Short paragraphs", "Background music"],
        "correct": 1,
        "hint": "Fear of missing out is the oldest form of magic."
      },
      {
        "question": "What prompt instruction helps the AI mimic the style of past scrolls?",
        "options": ["Copy the layout", "Refer to previous examples", "Ignore the brief", "Change the format"],
        "correct": 1,
        "hint": "History is the greatest teacher of tone."
      },
      {
        "question": "Which of these phrases would be best to instruct the AI to 'sell with flair'?",
        "options": ["“Use bullet points”", "“Explain the product”", "“Persuade a hesitant buyer”", "“Translate this”"],
        "correct": 2,
        "hint": "You're not just informing, you're charming."
      },
      {
        "question": "A knight faces two dragons: Boring and Confusing. What defeats both?",
        "options": ["Fluff", "Rhymes", "Clear benefit-driven prompts", "Puns"],
        "correct": 2,
        "hint": "Clarity with purpose strikes true."
      }
    ],
    "3": [
      {
        "question": "You must teach a page to whisper like a bard. What prompt command do you give?",
        "options": ["Use formal academic tone", "Be poetic and persuasive", "Add hashtags", "Include legal disclaimers"],
        "correct": 1,
        "hint": "The voice of a bard is both sweet and sharp."
      },
      {
        "question": "Which of these instructions brings forth a social post with rhythm and charm?",
        "options": ["“Summarize this quickly”", "“Write a LinkedIn post with a punchy hook”", "“Make a list”", "“Provide a translation”"],
        "correct": 1,
        "hint": "A hook catches more than just fish—it captures attention."
      },
      {
        "question": "You seek emotional resonance in your copy. What style must you request?",
        "options": ["Corporate", "Dry and direct", "Empathic and relatable", "Buzzword-heavy"],
        "correct": 2,
        "hint": "If your heart doesn’t stir, neither will the reader’s."
      },
      {
        "question": "A scroll begins with silence. What line opens the gate to attention?",
        "options": ["“Once upon a time…”", "“Our product is great”", "“Struggling to stay focused?”", "“This is an email”"],
        "correct": 2,
        "hint": "Relate first, persuade second."
      },
      {
        "question": "What makes a product description scroll shine brighter?",
        "options": ["List of features", "Call-to-action only", "Benefits and emotional pull", "Price only"],
        "correct": 2,
        "hint": "Show not just what it is, but why it matters."
      },
      {
        "question": "The scroll ends soon. What phrase helps close the deal?",
        "options": ["Contact us for more info", "Buy now before midnight", "Product spec sheet", "See terms & conditions"],
        "correct": 1,
        "hint": "Nothing moves a crowd like the ticking of time."
      }
    ],
    "4": [
      {
        "question": "The ghost of Conversion Past asks: what turns curiosity into action?",
        "options": ["Unclear goals", "Storytelling with CTA", "Wall of text", "Ambiguous pricing"],
        "correct": 1,
        "hint": "The tale must end with a leap, not a lull."
      },
      {
        "question": "You're tasked with turning specs into seduction. What prompt helps?",
        "options": ["Write technical details only", "Make the features emotional", "List every measurement", "Use all caps"],
        "correct": 1,
        "hint": "Even armor is beautiful when forged with feeling."
      },
      {
        "question": "An AI scroll falls flat. What essential ingredient did the prompt lack?",
        "options": ["Length", "Audience context", "Keywords", "A subtitle"],
        "correct": 1,
        "hint": "A story without a listener is just noise."
      },
      {
        "question": "Your client wants virality. Which prompt addition helps?",
        "options": ["Add a trending hook", "Describe it fully", "Limit words", "Add legal disclaimers"],
        "correct": 0,
        "hint": "Trends are the wind—ride it well."
      },
      {
        "question": "The scroll must feel human. What instruction gives it breath?",
        "options": ["Write like a lawyer", "Inject personality and flaws", "Use GPT default", "List pros only"],
        "correct": 1,
        "hint": "Even perfection needs imperfection to be real."
      },
      {
        "question": "The prompt must generate urgency. What do you add?",
        "options": ["Include a sense of scarcity", "Make it vague", "Use polite tone", "Skip the CTA"],
        "correct": 0,
        "hint": "The flame of urgency burns hottest when wood is scarce."
      }
    ],
    "5": [
      {
        "question": "The final client scroll demands trust. What builds it best?",
        "options": ["Testimonials and social proof", "Big claims", "Fancy language", "Clickbait"],
        "correct": 0,
        "hint": "Trust is earned, not conjured."
      },
      {
        "question": "You enter the Hall of Headlines. Which phrase brings readers in?",
        "options": ["Why this matters to you", "Best newsletter 2021", "Read me", "Hello there"],
        "correct": 0,
        "hint": "Relevance rings truer than trumpet calls."
      },
      {
        "question": "What prompt element adds rhythm and flow to persuasive copy?",
        "options": ["Call-to-action", "Alliteration and cadence", "Title case", "Data dump"],
        "correct": 1,
        "hint": "Words dance when their steps are timed."
      },
      {
        "question": "The scroll must convert. Which prompt helps best?",
        "options": ["“Add bullet points”", "“Persuade a skeptical customer to act now”", "“Explain the features”", "“Make it 300 words”"],
        "correct": 1,
        "hint": "Overcome doubt with confidence and clarity."
      },
      {
        "question": "You're asked to enchant Gen Z. What prompt trick works?",
        "options": ["Speak in memes and emojis", "Avoid humor", "Keep it corporate", "Use Shakespearean tone"],
        "correct": 0,
        "hint": "Speak their tongue, lest they scroll past in silence."
      },
      {
        "question": "The client wants you to break expectations. What must your prompt allow?",
        "options": ["Safe templates", "Unusual formats and creativity", "Only standard tone", "Shortened output"],
        "correct": 1,
        "hint": "The unexpected casts the longest spell."
      }
    ],
    "boss": [
      {
        "question": "I seal the fate of scrolls, urging the reader to act. Short, mighty, essential—I close the spell.\nWhat am I?",
        "answers": ["call to action", "cta", "call‑to‑action"]
      },
      {
        "question": "I shape the voice of your scroll. Sometimes witty, sometimes solemn—I give life to your words.\nWhat am I?",
        "answers": ["tone", "voice"]
      },
      {
        "question": "I provide the path, the purpose, the goal. Without me, even the best quill falters.\nWhat am I?",
        "answers": ["brief", "creative brief", "prompt brief", "copy brief"]
      }
    ]
  },
  "code-mage": {
  "1": [
    {
      "question": "What is the best way to instruct an LLM to generate Python code with comments?",
      "options": [
        "Ask for 'minimal code'",
        "Use: 'Write commented Python code...'",
        "Say: 'Output Python script only'",
        "Request pseudocode first"
      ],
      "correct": 1,
      "hint": "Be explicit about language and expectations."
    },
    {
      "question": "Which language benefits most from using chain-of-thought prompting?",
      "options": [
        "Python",
        "SQL",
        "Bash",
        "All of the above"
      ],
      "correct": 3,
      "hint": "Reasoning helps in any structured logic."
    },
    {
      "question": "You want to generate secure password handling in JavaScript. What keyword should your prompt include?",
      "options": [
        "eval",
        "async",
        "crypto",
        "document.write"
      ],
      "correct": 2,
      "hint": "Security often begins with the right library."
    }
  ],
  "2": [
    {
      "question": "How can you reduce hallucinations in code outputs?",
      "options": [
        "Avoid specifying the language",
        "Use precise function signatures",
        "Rely on model defaults",
        "Include vague tasks"
      ],
      "correct": 1,
      "hint": "Clarity of input improves truth of output."
    },
    {
      "question": "What is a good way to enforce SQL safety in a prompt?",
      "options": [
        "Request raw string interpolation",
        "Use 'parameterized query' in prompt",
        "Mention 'fast results'",
        "Add 'no logging'"
      ],
      "correct": 1,
      "hint": "Avoid injections with the right wording."
    },
    {
      "question": "You want a shell script that logs errors to a file. Which prompt works best?",
      "options": [
        "Generate a Bash script",
        "Write a shell command with comments",
        "Create a Bash script that logs errors to error.log",
        "List shell syntax"
      ],
      "correct": 2,
      "hint": "Outputs improve when the file target and behavior are included."
    }
  ],
  "3": [
    {
      "question": "Which prompt instruction improves code readability?",
      "options": [
        "Add inline comments and consistent indentation",
        "Remove all comments",
        "Use compact one-liners",
        "Prioritize minification"
      ],
      "correct": 0,
      "hint": "Readable code is maintainable code."
    },
    {
      "question": "You want to debug a recursive function. What should the prompt ask for?",
      "options": [
        "Return expected output",
        "Explain the base and recursive cases",
        "Replace recursion with loops",
        "Test with one case"
      ],
      "correct": 1,
      "hint": "Understanding logic is better than guessing output."
    },
    {
      "question": "How do you ask the model to avoid using deprecated libraries?",
      "options": [
        "Specify the language version",
        "Say 'modern syntax'",
        "Trust the model",
        "Use 'old-school code'"
      ],
      "correct": 0,
      "hint": "Context versioning is key."
    }
  ],
  "4": [
    {
      "question": "To instruct the model to explain a regex, the prompt must...",
      "options": [
        "Say: 'Visualize this'",
        "Include the regex and request plain language explanation",
        "Use only the pattern",
        "Avoid examples"
      ],
      "correct": 1,
      "hint": "Even arcane symbols reveal their meaning when asked nicely."
    },
    {
      "question": "Which prompt gets a model to benchmark two sorting algorithms?",
      "options": [
        "Explain bubble sort",
        "Compare quicksort and mergesort with time complexity",
        "Show one example of sorting",
        "Print a list"
      ],
      "correct": 1,
      "hint": "Comparison + performance = benchmarking."
    },
    {
      "question": "To summarize a codebase, a prompt should include...",
      "options": [
        "Just the repo name",
        "All file paths",
        "The full directory tree and a summary request",
        "Only README.md"
      ],
      "correct": 2,
      "hint": "Structure matters as much as content."
    }
  ],
  "5": [
    {
      "question": "What is the ideal format for a prompt to generate unit tests?",
      "options": [
        "List expected behaviors and function signature",
        "Only write 'add unit tests'",
        "Say 'make test'",
        "Ask for test.js"
      ],
      "correct": 0,
      "hint": "Behavior drives testing."
    },
    {
      "question": "To ensure the code is reusable, your prompt should ask for...",
      "options": [
        "Copy-paste examples",
        "A single monolithic script",
        "Modular design and function reuse",
        "Hardcoded values"
      ],
      "correct": 2,
      "hint": "Modularity is a spell of sustainability."
    },
    {
      "question": "How do you guide the AI to follow PEP8 in Python code?",
      "options": [
        "Say 'use conventions'",
        "Mention 'Python best practices'",
        "Request compliance with PEP8",
        "No need — the model knows"
      ],
      "correct": 2,
      "hint": "Standards should be spoken, not assumed."
    }
  ],
  "boss": [
    {
      "question": "What prompt engineering technique involves giving the model step-by-step reasoning before answering?",
      "answers": ["chain of thought", "chain-of-thought", "CoT"]
    },
    {
      "question": "Which keyword ensures reproducibility when generating AI-based outputs?",
      "answers": ["seed", "random seed", "fixed seed"]
    },
    {
      "question": "Which output format is most reliable for structured AI-generated data?",
      "answers": ["json", "JSON", "json format", "JSON format"]
    }
  ]
}
}

